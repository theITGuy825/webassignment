{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,SCIA,MAAM,EAAc,SAAS,cAAc,CAAC,eACtC,EAAe,SAAS,cAAc,CAAC,gBACvC,EAAa,SAAS,cAAc,CAAC,cACrC,EAAqB,SAAS,cAAc,CAAC,sBAC7C,EAAuB,SAAS,cAAc,CAAC,wBAC/C,EAAgB,SAAS,cAAc,CAAC,iBACxC,EAAc,SAAS,cAAc,CAAC,eACtC,EAAkB,SAAS,cAAc,CAAC,eAC1C,EAAoB,SAAS,cAAc,CAAC,iBAC5C,EAAc,SAAS,cAAc,CAAC,WAsC5C,eAAe,IACX,IAAM,EAAkB,MAAM,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAA,EAAC,CAAG,WACrD,CAAA,EAAW,SAAS,CAAG,GACvB,IAAI,EAAc,EAElB,EAAgB,OAAO,CAAC,AAAA,IACpB,IAAM,EAAa,SAAS,aAAa,CAAC,KAC1C,CAAA,EAAW,WAAW,CAAG,CAAC,CAAC,EAAE,EAAI,IAAI,GAAG,MAAM,CAAA,CAAE,CAChD,EAAW,EAAE,CAAG,EAAI,EAAE,CACtB,EAAW,WAAW,CAAC,GACvB,GAAe,EAAI,IAAI,GAAG,MAAM,AACpC,GAEA,EAAgB,WAAW,CAAG,EAAY,OAAO,CAAC,EACtD,CAGA,eAAe,IACX,IAAM,EAAmB,MAAM,AAAA,CAAA,EAAA,EAAA,OAAM,AAAN,EAAQ,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAA,EAAC,CAAG,YACtD,CAAA,EAAY,SAAS,CAAG,GACxB,IAAI,EAAgB,EAEpB,EAAiB,OAAO,CAAC,AAAA,IACrB,IAAM,EAAc,SAAS,aAAa,CAAC,KAC3C,CAAA,EAAY,WAAW,CAAG,CAAC,CAAC,EAAE,EAAI,IAAI,GAAG,MAAM,CAAC,GAAG,EAAE,EAAI,IAAI,GAAG,QAAQ,CAAA,CAAE,CAC1E,EAAY,EAAE,CAAG,EAAI,EAAE,CACvB,EAAY,WAAW,CAAC,GACxB,GAAiB,EAAI,IAAI,GAAG,MAAM,AACtC,GAEA,EAAkB,WAAW,CAAG,EAAc,OAAO,CAAC,EAC1D,CAGA,SAAS,IACL,IAAM,EAAc,WAAW,EAAgB,WAAW,EACpD,EAAgB,WAAW,EAAkB,WAAW,CAE9D,CAAA,EAAY,WAAW,CAAG,AADV,CAAA,EAAc,CAA9B,EACkC,OAAO,CAAC,EAC9C,CAGA,eAAe,EAAqB,CAAM,EACtC,GAAI,CAEA,MAAM,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAA,EAAC,CAAG,WAAY,CACpC,OAAQ,CACZ,GACA,QAAQ,GAAG,CAAC,4BAChB,CAAE,MAAO,EAAK,CAEV,QAAQ,KAAK,CAAC,4DAA6D,GAG3E,IAAI,EAAe,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,aAAe,EAAE,CAGpE,EAAa,IAAI,CAAC,CAAE,OAAQ,EAAQ,KAAM,IAAI,IAAO,GAGrD,aAAa,OAAO,CAAC,UAAW,KAAK,SAAS,CAAC,IAE/C,MAAM,mDACV,CACJ,CAGA,eAAe,EAAsB,CAAM,CAAE,CAAQ,EACjD,GAAI,CAEA,MAAM,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,AAAA,CAAA,EAAA,EAAA,UAAS,AAAT,EAAW,EAAA,EAAC,CAAG,YAAa,CACrC,OAAQ,EACR,SAAU,CACd,GACA,QAAQ,GAAG,CAAC,6BAChB,CAAE,MAAO,EAAK,CAEV,QAAQ,KAAK,CAAC,6DAA8D,GAG5E,IAAI,EAAgB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,cAAgB,EAAE,CAGtE,EAAc,IAAI,CAAC,CAAE,OAAQ,EAAQ,SAAU,EAAU,KAAM,IAAI,IAAO,GAG1E,aAAa,OAAO,CAAC,WAAY,KAAK,SAAS,CAAC,IAEhD,MAAM,oDACV,CACJ,CA7HA,OAAO,gBAAgB,CAAC,OAAQ,UAC5B,MAAM,IACN,MAAM,IACN,GACJ,GAGA,EAAa,gBAAgB,CAAC,QAAS,UACnC,IAAM,EAAe,WAAW,EAAY,KAAK,CAAC,IAAI,GAClD,EAAC,MAAM,IAAiB,EAAe,GACvC,MAAM,EAAqB,GAC3B,EAAY,KAAK,CAAG,GACpB,IACA,KAEA,MAAM,sCAEd,GAGA,EAAc,gBAAgB,CAAC,QAAS,UACpC,IAAM,EAAgB,WAAW,EAAmB,KAAK,CAAC,IAAI,IACxD,EAAkB,EAAqB,KAAK,CAAC,IAAI,EACnD,EAAC,MAAM,IAAkB,EAAgB,GAAK,GAC9C,MAAM,EAAsB,EAAe,GAC3C,EAAmB,KAAK,CAAG,GAC3B,EAAqB,KAAK,CAAG,GAC7B,IACA,KAEA,MAAM,oDAEd","sources":["<anon>","script.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $kFD7u = parcelRequire(\"kFD7u\");\n\nvar $ilpIi = parcelRequire(\"ilpIi\");\n// DOM Elements\nconst $c1ce9d969bfa6909$var$incomeInput = document.getElementById('incomeInput');\nconst $c1ce9d969bfa6909$var$addIncomeBtn = document.getElementById('addIncomeBtn');\nconst $c1ce9d969bfa6909$var$incomeList = document.getElementById('incomeList');\nconst $c1ce9d969bfa6909$var$expenseAmountInput = document.getElementById('expenseAmountInput');\nconst $c1ce9d969bfa6909$var$expenseCategoryInput = document.getElementById('expenseCategoryInput');\nconst $c1ce9d969bfa6909$var$addExpenseBtn = document.getElementById('addExpenseBtn');\nconst $c1ce9d969bfa6909$var$expenseList = document.getElementById('expenseList');\nconst $c1ce9d969bfa6909$var$totalIncomeElem = document.getElementById('totalIncome');\nconst $c1ce9d969bfa6909$var$totalExpensesElem = document.getElementById('totalExpenses');\nconst $c1ce9d969bfa6909$var$balanceElem = document.getElementById('balance');\n// Load data on window load\nwindow.addEventListener('load', async ()=>{\n    await $c1ce9d969bfa6909$var$renderIncome();\n    await $c1ce9d969bfa6909$var$renderExpenses();\n    $c1ce9d969bfa6909$var$updateSummary();\n});\n// Add Income\n$c1ce9d969bfa6909$var$addIncomeBtn.addEventListener('click', async ()=>{\n    const incomeAmount = parseFloat($c1ce9d969bfa6909$var$incomeInput.value.trim());\n    if (!isNaN(incomeAmount) && incomeAmount > 0) {\n        await $c1ce9d969bfa6909$var$addIncomeToFirestore(incomeAmount);\n        $c1ce9d969bfa6909$var$incomeInput.value = '';\n        $c1ce9d969bfa6909$var$renderIncome();\n        $c1ce9d969bfa6909$var$updateSummary();\n    } else alert(\"Please enter a valid income amount.\");\n});\n// Add Expense\n$c1ce9d969bfa6909$var$addExpenseBtn.addEventListener('click', async ()=>{\n    const expenseAmount = parseFloat($c1ce9d969bfa6909$var$expenseAmountInput.value.trim());\n    const expenseCategory = $c1ce9d969bfa6909$var$expenseCategoryInput.value.trim();\n    if (!isNaN(expenseAmount) && expenseAmount > 0 && expenseCategory) {\n        await $c1ce9d969bfa6909$var$addExpenseToFirestore(expenseAmount, expenseCategory);\n        $c1ce9d969bfa6909$var$expenseAmountInput.value = '';\n        $c1ce9d969bfa6909$var$expenseCategoryInput.value = '';\n        $c1ce9d969bfa6909$var$renderExpenses();\n        $c1ce9d969bfa6909$var$updateSummary();\n    } else alert(\"Please enter a valid expense amount and category.\");\n});\n// Fetch and render incomes\nasync function $c1ce9d969bfa6909$var$renderIncome() {\n    const incomesSnapshot = await (0, $ilpIi.getDocs)((0, $ilpIi.collection)((0, $kFD7u.db), \"incomes\"));\n    $c1ce9d969bfa6909$var$incomeList.innerHTML = '';\n    let totalIncome = 0;\n    incomesSnapshot.forEach((doc)=>{\n        const incomeItem = document.createElement('li');\n        incomeItem.textContent = `$${doc.data().amount}`;\n        incomeItem.id = doc.id;\n        $c1ce9d969bfa6909$var$incomeList.appendChild(incomeItem);\n        totalIncome += doc.data().amount;\n    });\n    $c1ce9d969bfa6909$var$totalIncomeElem.textContent = totalIncome.toFixed(2);\n}\n// Fetch and render expenses\nasync function $c1ce9d969bfa6909$var$renderExpenses() {\n    const expensesSnapshot = await (0, $ilpIi.getDocs)((0, $ilpIi.collection)((0, $kFD7u.db), \"expenses\"));\n    $c1ce9d969bfa6909$var$expenseList.innerHTML = '';\n    let totalExpenses = 0;\n    expensesSnapshot.forEach((doc)=>{\n        const expenseItem = document.createElement('li');\n        expenseItem.textContent = `$${doc.data().amount} - ${doc.data().category}`;\n        expenseItem.id = doc.id;\n        $c1ce9d969bfa6909$var$expenseList.appendChild(expenseItem);\n        totalExpenses += doc.data().amount;\n    });\n    $c1ce9d969bfa6909$var$totalExpensesElem.textContent = totalExpenses.toFixed(2);\n}\n// Update Summary\nfunction $c1ce9d969bfa6909$var$updateSummary() {\n    const totalIncome = parseFloat($c1ce9d969bfa6909$var$totalIncomeElem.textContent);\n    const totalExpenses = parseFloat($c1ce9d969bfa6909$var$totalExpensesElem.textContent);\n    const balance = totalIncome - totalExpenses;\n    $c1ce9d969bfa6909$var$balanceElem.textContent = balance.toFixed(2);\n}\n// Add Income to Firestore with localStorage fallback\nasync function $c1ce9d969bfa6909$var$addIncomeToFirestore(amount) {\n    try {\n        // Attempt to add income to Firestore\n        await (0, $ilpIi.addDoc)((0, $ilpIi.collection)((0, $kFD7u.db), \"incomes\"), {\n            amount: amount\n        });\n        console.log('Income added to Firebase.');\n    } catch (err) {\n        // If Firebase fails, save to localStorage\n        console.error('Failed to add income to Firebase, saving to localStorage:', err);\n        // Retrieve existing incomes from localStorage or initialize as empty array\n        let savedIncomes = JSON.parse(localStorage.getItem('incomes')) || [];\n        // Add new income to the list\n        savedIncomes.push({\n            amount: amount,\n            date: new Date()\n        });\n        // Save the updated list back to localStorage\n        localStorage.setItem('incomes', JSON.stringify(savedIncomes));\n        alert('Income saved locally as Firebase is unavailable.');\n    }\n}\n// Add Expense to Firestore with localStorage fallback\nasync function $c1ce9d969bfa6909$var$addExpenseToFirestore(amount, category) {\n    try {\n        // Attempt to add expense to Firestore\n        await (0, $ilpIi.addDoc)((0, $ilpIi.collection)((0, $kFD7u.db), \"expenses\"), {\n            amount: amount,\n            category: category\n        });\n        console.log('Expense added to Firebase.');\n    } catch (err) {\n        // If Firebase fails, save to localStorage\n        console.error('Failed to add expense to Firebase, saving to localStorage:', err);\n        // Retrieve existing expenses from localStorage or initialize as empty array\n        let savedExpenses = JSON.parse(localStorage.getItem('expenses')) || [];\n        // Add new expense to the list\n        savedExpenses.push({\n            amount: amount,\n            category: category,\n            date: new Date()\n        });\n        // Save the updated list back to localStorage\n        localStorage.setItem('expenses', JSON.stringify(savedExpenses));\n        alert('Expense saved locally as Firebase is unavailable.');\n    }\n}\n\n\n//# sourceMappingURL=index.8715b5d7.js.map\n","import { db } from './firebase-config.js';\r\nimport { addDoc, collection, getDocs, deleteDoc, doc } from 'firebase/firestore';\r\n\r\n// DOM Elements\r\nconst incomeInput = document.getElementById('incomeInput');\r\nconst addIncomeBtn = document.getElementById('addIncomeBtn');\r\nconst incomeList = document.getElementById('incomeList');\r\nconst expenseAmountInput = document.getElementById('expenseAmountInput');\r\nconst expenseCategoryInput = document.getElementById('expenseCategoryInput');\r\nconst addExpenseBtn = document.getElementById('addExpenseBtn');\r\nconst expenseList = document.getElementById('expenseList');\r\nconst totalIncomeElem = document.getElementById('totalIncome');\r\nconst totalExpensesElem = document.getElementById('totalExpenses');\r\nconst balanceElem = document.getElementById('balance');\r\n\r\n// Load data on window load\r\nwindow.addEventListener('load', async () => {\r\n    await renderIncome();\r\n    await renderExpenses();\r\n    updateSummary();\r\n});\r\n\r\n// Add Income\r\naddIncomeBtn.addEventListener('click', async () => {\r\n    const incomeAmount = parseFloat(incomeInput.value.trim());\r\n    if (!isNaN(incomeAmount) && incomeAmount > 0) {\r\n        await addIncomeToFirestore(incomeAmount);\r\n        incomeInput.value = '';\r\n        renderIncome();\r\n        updateSummary();\r\n    } else {\r\n        alert(\"Please enter a valid income amount.\");\r\n    }\r\n});\r\n\r\n// Add Expense\r\naddExpenseBtn.addEventListener('click', async () => {\r\n    const expenseAmount = parseFloat(expenseAmountInput.value.trim());\r\n    const expenseCategory = expenseCategoryInput.value.trim();\r\n    if (!isNaN(expenseAmount) && expenseAmount > 0 && expenseCategory) {\r\n        await addExpenseToFirestore(expenseAmount, expenseCategory);\r\n        expenseAmountInput.value = '';\r\n        expenseCategoryInput.value = '';\r\n        renderExpenses();\r\n        updateSummary();\r\n    } else {\r\n        alert(\"Please enter a valid expense amount and category.\");\r\n    }\r\n});\r\n\r\n// Fetch and render incomes\r\nasync function renderIncome() {\r\n    const incomesSnapshot = await getDocs(collection(db, \"incomes\"));\r\n    incomeList.innerHTML = '';\r\n    let totalIncome = 0;\r\n\r\n    incomesSnapshot.forEach(doc => {\r\n        const incomeItem = document.createElement('li');\r\n        incomeItem.textContent = `$${doc.data().amount}`;\r\n        incomeItem.id = doc.id;\r\n        incomeList.appendChild(incomeItem);\r\n        totalIncome += doc.data().amount;\r\n    });\r\n\r\n    totalIncomeElem.textContent = totalIncome.toFixed(2);\r\n}\r\n\r\n// Fetch and render expenses\r\nasync function renderExpenses() {\r\n    const expensesSnapshot = await getDocs(collection(db, \"expenses\"));\r\n    expenseList.innerHTML = '';\r\n    let totalExpenses = 0;\r\n\r\n    expensesSnapshot.forEach(doc => {\r\n        const expenseItem = document.createElement('li');\r\n        expenseItem.textContent = `$${doc.data().amount} - ${doc.data().category}`;\r\n        expenseItem.id = doc.id;\r\n        expenseList.appendChild(expenseItem);\r\n        totalExpenses += doc.data().amount;\r\n    });\r\n\r\n    totalExpensesElem.textContent = totalExpenses.toFixed(2);\r\n}\r\n\r\n// Update Summary\r\nfunction updateSummary() {\r\n    const totalIncome = parseFloat(totalIncomeElem.textContent);\r\n    const totalExpenses = parseFloat(totalExpensesElem.textContent);\r\n    const balance = totalIncome - totalExpenses;\r\n    balanceElem.textContent = balance.toFixed(2);\r\n}\r\n\r\n// Add Income to Firestore with localStorage fallback\r\nasync function addIncomeToFirestore(amount) {\r\n    try {\r\n        // Attempt to add income to Firestore\r\n        await addDoc(collection(db, \"incomes\"), {\r\n            amount: amount,\r\n        });\r\n        console.log('Income added to Firebase.');\r\n    } catch (err) {\r\n        // If Firebase fails, save to localStorage\r\n        console.error('Failed to add income to Firebase, saving to localStorage:', err);\r\n\r\n        // Retrieve existing incomes from localStorage or initialize as empty array\r\n        let savedIncomes = JSON.parse(localStorage.getItem('incomes')) || [];\r\n        \r\n        // Add new income to the list\r\n        savedIncomes.push({ amount: amount, date: new Date() });\r\n\r\n        // Save the updated list back to localStorage\r\n        localStorage.setItem('incomes', JSON.stringify(savedIncomes));\r\n\r\n        alert('Income saved locally as Firebase is unavailable.');\r\n    }\r\n}\r\n\r\n// Add Expense to Firestore with localStorage fallback\r\nasync function addExpenseToFirestore(amount, category) {\r\n    try {\r\n        // Attempt to add expense to Firestore\r\n        await addDoc(collection(db, \"expenses\"), {\r\n            amount: amount,\r\n            category: category,\r\n        });\r\n        console.log('Expense added to Firebase.');\r\n    } catch (err) {\r\n        // If Firebase fails, save to localStorage\r\n        console.error('Failed to add expense to Firebase, saving to localStorage:', err);\r\n\r\n        // Retrieve existing expenses from localStorage or initialize as empty array\r\n        let savedExpenses = JSON.parse(localStorage.getItem('expenses')) || [];\r\n        \r\n        // Add new expense to the list\r\n        savedExpenses.push({ amount: amount, category: category, date: new Date() });\r\n\r\n        // Save the updated list back to localStorage\r\n        localStorage.setItem('expenses', JSON.stringify(savedExpenses));\r\n\r\n        alert('Expense saved locally as Firebase is unavailable.');\r\n    }\r\n}\r\n\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$kFD7u","$ilpIi","$c1ce9d969bfa6909$var$incomeInput","document","getElementById","$c1ce9d969bfa6909$var$addIncomeBtn","$c1ce9d969bfa6909$var$incomeList","$c1ce9d969bfa6909$var$expenseAmountInput","$c1ce9d969bfa6909$var$expenseCategoryInput","$c1ce9d969bfa6909$var$addExpenseBtn","$c1ce9d969bfa6909$var$expenseList","$c1ce9d969bfa6909$var$totalIncomeElem","$c1ce9d969bfa6909$var$totalExpensesElem","$c1ce9d969bfa6909$var$balanceElem","$c1ce9d969bfa6909$var$renderIncome","incomesSnapshot","getDocs","collection","db","innerHTML","totalIncome","forEach","doc","incomeItem","createElement","textContent","data","amount","appendChild","toFixed","$c1ce9d969bfa6909$var$renderExpenses","expensesSnapshot","totalExpenses","expenseItem","category","$c1ce9d969bfa6909$var$updateSummary","parseFloat","balance","$c1ce9d969bfa6909$var$addIncomeToFirestore","addDoc","console","log","error","savedIncomes","JSON","parse","localStorage","getItem","push","date","Date","setItem","stringify","alert","$c1ce9d969bfa6909$var$addExpenseToFirestore","savedExpenses","window","addEventListener","incomeAmount","value","trim","isNaN","expenseAmount","expenseCategory"],"version":3,"file":"index.8715b5d7.js.map"}