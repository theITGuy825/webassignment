{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,S,E,E,SCeA,MAAM,EAAa,SAAS,cAAc,CAAC,SACrC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAW,SAAS,cAAc,CAAC,YACnC,EAAkB,SAAS,cAAc,CAAC,mBAC1C,EAAqB,SAAS,cAAc,CAAC,sBAC7C,EAAmB,SAAS,cAAc,CAAC,oBAGjD,AAAA,CAAA,EAAA,EAAA,kBAAiB,AAAjB,EAAmB,EAAA,IAAG,CAAG,AAAC,IAClB,IACA,QAAQ,GAAG,CAAC,sCACZ,OAAO,QAAQ,CAAC,IAAI,CAAG,2BAE/B,GAGA,EAAS,gBAAgB,CAAC,QAAS,UAC/B,IAAM,EAAQ,EAAW,KAAK,CAAC,IAAI,GAC7B,EAAW,EAAc,KAAK,CAAC,IAAI,GAEzC,GAAI,CACA,MAAM,AAAA,CAAA,EAAA,EAAA,cAAa,AAAb,EAAe,EAAA,IAAG,CAAG,EAAA,uBAAsB,EACjD,MAAM,AAAA,CAAA,EAAA,EAAA,0BAAyB,AAAzB,EAA2B,EAAA,IAAG,CAAG,EAAO,GAC9C,QAAQ,GAAG,CAAC,oBAChB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,eAAgB,EAAM,OAAO,CAC/C,CACJ,GAGA,EAAgB,gBAAgB,CAAC,QAAS,UACtC,IAAM,EAAW,IAAI,EAAA,kBAAiB,CACtC,GAAI,CACA,MAAM,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,EAAA,IAAG,CAAG,GAC5B,QAAQ,GAAG,CAAC,6BAChB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,wBAAyB,EAAM,OAAO,CACxD,CACJ,GAGA,EAAmB,gBAAgB,CAAC,QAAS,UACzC,GAAI,CAAC,OAAO,mBAAmB,CAAE,CAC7B,QAAQ,KAAK,CAAC,2CACd,MACJ,CAEA,GAAI,CACA,IAAM,EAAY,CACd,UAAW,IAAI,WAAW,IAC1B,GAAI,CAAE,KAAM,cAAe,EAC3B,KAAM,CACF,GAAI,IAAI,WAAW,IACnB,KAAM,mBACN,YAAa,MACjB,EACA,iBAAkB,CAAC,CAAE,KAAM,aAAc,IAAK,EAAG,EAAE,AACvD,CAEmB,OAAM,UAAU,WAAW,CAAC,MAAM,CAAC,CAAE,UAAA,CAAU,GAE9D,QAAQ,GAAG,CAAC,wCAEZ,QAAQ,KAAK,CAAC,mCAEtB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,wBAAyB,EAAM,OAAO,CACxD,CACJ,GAGA,EAAiB,gBAAgB,CAAC,QAAS,UACvC,IAAM,EAAQ,EAAW,KAAK,CAAC,IAAI,GAC7B,EAAW,EAAc,KAAK,CAAC,IAAI,GAEzC,GAAI,AAAU,KAAV,GAAgB,AAAa,KAAb,EAAiB,CACjC,QAAQ,KAAK,CAAC,yCACd,MACJ,CAEA,GAAI,CACA,MAAM,AAAA,CAAA,EAAA,EAAA,8BAA6B,AAA7B,EAA+B,EAAA,IAAG,CAAG,EAAO,GAClD,QAAQ,GAAG,CAAC,gCAChB,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,0BAA2B,EAAM,OAAO,CAC1D,CACJ","sources":["<anon>","login.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $3FCmC = parcelRequire(\"3FCmC\");\n\nvar $6AR8M = parcelRequire(\"6AR8M\");\n// DOM Elements\nconst $8e45380bfb12b94e$var$emailInput = document.getElementById(\"email\");\nconst $8e45380bfb12b94e$var$passwordInput = document.getElementById(\"password\");\nconst $8e45380bfb12b94e$var$loginBtn = document.getElementById(\"loginBtn\");\nconst $8e45380bfb12b94e$var$googleSignInBtn = document.getElementById(\"googleSignInBtn\");\nconst $8e45380bfb12b94e$var$biometricSignInBtn = document.getElementById(\"biometricSignInBtn\");\nconst $8e45380bfb12b94e$var$createAccountBtn = document.getElementById(\"createAccountBtn\");\n// Redirect on login\n(0, $6AR8M.onAuthStateChanged)((0, $3FCmC.auth), (user)=>{\n    if (user) {\n        console.log(\"User authenticated, redirecting...\");\n        window.location.href = \"/webassignment/main.html\";\n    }\n});\n// Login with Email and Password\n$8e45380bfb12b94e$var$loginBtn.addEventListener(\"click\", async ()=>{\n    const email = $8e45380bfb12b94e$var$emailInput.value.trim();\n    const password = $8e45380bfb12b94e$var$passwordInput.value.trim();\n    try {\n        await (0, $6AR8M.setPersistence)((0, $3FCmC.auth), (0, $6AR8M.browserLocalPersistence));\n        await (0, $6AR8M.signInWithEmailAndPassword)((0, $3FCmC.auth), email, password);\n        console.log(\"Login successful!\");\n    } catch (error) {\n        console.error(\"Login Error:\", error.message);\n    }\n});\n// Google Sign-In\n$8e45380bfb12b94e$var$googleSignInBtn.addEventListener(\"click\", async ()=>{\n    const provider = new (0, $6AR8M.GoogleAuthProvider)();\n    try {\n        await (0, $6AR8M.signInWithPopup)((0, $3FCmC.auth), provider);\n        console.log(\"Google Sign-In successful!\");\n    } catch (error) {\n        console.error(\"Google Sign-In Error:\", error.message);\n    }\n});\n// Biometric Authentication (WebAuthn - Simplified)\n$8e45380bfb12b94e$var$biometricSignInBtn.addEventListener(\"click\", async ()=>{\n    if (!window.PublicKeyCredential) {\n        console.error(\"Biometric authentication not supported.\");\n        return;\n    }\n    try {\n        const publicKey = {\n            challenge: new Uint8Array(32),\n            rp: {\n                name: \"Your Website\"\n            },\n            user: {\n                id: new Uint8Array(16),\n                name: \"user@example.com\",\n                displayName: \"User\"\n            },\n            pubKeyCredParams: [\n                {\n                    type: \"public-key\",\n                    alg: -7\n                }\n            ]\n        };\n        const credential = await navigator.credentials.create({\n            publicKey: publicKey\n        });\n        if (credential) console.log(\"Biometric authentication successful!\");\n        else console.error(\"Biometric authentication failed.\");\n    } catch (error) {\n        console.error(\"Biometric Auth Error:\", error.message);\n    }\n});\n// Create Account with Email and Password\n$8e45380bfb12b94e$var$createAccountBtn.addEventListener(\"click\", async ()=>{\n    const email = $8e45380bfb12b94e$var$emailInput.value.trim();\n    const password = $8e45380bfb12b94e$var$passwordInput.value.trim();\n    if (email === \"\" || password === \"\") {\n        console.error(\"Please enter both email and password.\");\n        return;\n    }\n    try {\n        await (0, $6AR8M.createUserWithEmailAndPassword)((0, $3FCmC.auth), email, password);\n        console.log(\"Account created successfully!\");\n    } catch (error) {\n        console.error(\"Account Creation Error:\", error.message);\n    }\n});\n\n\n//# sourceMappingURL=index.51796d77.js.map\n","import { \r\n    auth \r\n} from \"./firebaseconfig\";\r\n\r\nimport { \r\n    signInWithEmailAndPassword, \r\n    createUserWithEmailAndPassword, \r\n    GoogleAuthProvider, \r\n    signInWithPopup,\r\n    setPersistence,\r\n    browserLocalPersistence,\r\n    onAuthStateChanged\r\n} from \"firebase/auth\";\r\n\r\n// DOM Elements\r\nconst emailInput = document.getElementById(\"email\");\r\nconst passwordInput = document.getElementById(\"password\");\r\nconst loginBtn = document.getElementById(\"loginBtn\");\r\nconst googleSignInBtn = document.getElementById(\"googleSignInBtn\");\r\nconst biometricSignInBtn = document.getElementById(\"biometricSignInBtn\");\r\nconst createAccountBtn = document.getElementById(\"createAccountBtn\");\r\n\r\n// Redirect on login\r\nonAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n        console.log(\"User authenticated, redirecting...\");\r\n        window.location.href = \"/webassignment/main.html\";\r\n    }\r\n});\r\n\r\n// Login with Email and Password\r\nloginBtn.addEventListener(\"click\", async () => {\r\n    const email = emailInput.value.trim();\r\n    const password = passwordInput.value.trim();\r\n\r\n    try {\r\n        await setPersistence(auth, browserLocalPersistence);\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n        console.log(\"Login successful!\");\r\n    } catch (error) {\r\n        console.error(\"Login Error:\", error.message);\r\n    }\r\n});\r\n\r\n// Google Sign-In\r\ngoogleSignInBtn.addEventListener(\"click\", async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n        await signInWithPopup(auth, provider);\r\n        console.log(\"Google Sign-In successful!\");\r\n    } catch (error) {\r\n        console.error(\"Google Sign-In Error:\", error.message);\r\n    }\r\n});\r\n\r\n// Biometric Authentication (WebAuthn - Simplified)\r\nbiometricSignInBtn.addEventListener(\"click\", async () => {\r\n    if (!window.PublicKeyCredential) {\r\n        console.error(\"Biometric authentication not supported.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        const publicKey = {\r\n            challenge: new Uint8Array(32),\r\n            rp: { name: \"Your Website\" },\r\n            user: {\r\n                id: new Uint8Array(16),\r\n                name: \"user@example.com\",\r\n                displayName: \"User\",\r\n            },\r\n            pubKeyCredParams: [{ type: \"public-key\", alg: -7 }],\r\n        };\r\n\r\n        const credential = await navigator.credentials.create({ publicKey });\r\n        if (credential) {\r\n            console.log(\"Biometric authentication successful!\");\r\n        } else {\r\n            console.error(\"Biometric authentication failed.\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Biometric Auth Error:\", error.message);\r\n    }\r\n});\r\n\r\n// Create Account with Email and Password\r\ncreateAccountBtn.addEventListener(\"click\", async () => {\r\n    const email = emailInput.value.trim();\r\n    const password = passwordInput.value.trim();\r\n\r\n    if (email === \"\" || password === \"\") {\r\n        console.error(\"Please enter both email and password.\");\r\n        return;\r\n    }\r\n\r\n    try {\r\n        await createUserWithEmailAndPassword(auth, email, password);\r\n        console.log(\"Account created successfully!\");\r\n    } catch (error) {\r\n        console.error(\"Account Creation Error:\", error.message);\r\n    }\r\n});\r\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$3FCmC","$6AR8M","$8e45380bfb12b94e$var$emailInput","document","getElementById","$8e45380bfb12b94e$var$passwordInput","$8e45380bfb12b94e$var$loginBtn","$8e45380bfb12b94e$var$googleSignInBtn","$8e45380bfb12b94e$var$biometricSignInBtn","$8e45380bfb12b94e$var$createAccountBtn","onAuthStateChanged","auth","user","console","log","window","location","href","addEventListener","email","value","trim","password","setPersistence","browserLocalPersistence","signInWithEmailAndPassword","error","message","provider","GoogleAuthProvider","signInWithPopup","PublicKeyCredential","publicKey","challenge","Uint8Array","rp","name","displayName","pubKeyCredParams","type","alg","navigator","credentials","create","createUserWithEmailAndPassword"],"version":3,"file":"index.51796d77.js.map"}